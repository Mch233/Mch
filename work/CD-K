#CD-k算法：

由于CD-k算法中（k表示采样次数），当k=1时，即只进行一步吉布斯采样，就能达到很好的拟合效果[2]。故一般采用CD-1算法的形式，来拟合各参数的值

1. 根据训练集中样本点设置可视层神经元 v 激活状态
2. 根据公式（1-4）隐藏层各神经元的条件概率计算所有隐藏层神经元状态；在隐藏层各神经元的状态 h 确定，
3. 根据公式（1-5）可视层各神经元的条件概率计算在隐藏层确定的情况下，所有可视层神经元的状态，产生可视层的一个重构 v* ；

如果此时 v 和 v* 一样，那么得到的隐藏层 h 就是可视层 v 的另外一种表达，此时隐藏层可以作为可视层输入数据的特征。
同时在训练中，可以利用可视层的状态与重构可视层的状态的误差来调整RBM的参数，从而使得 v 和 v∗ 的重构误差尽可能减小。

1.
      v  －>  h
	    h  －>  v*
	    v* －>  h*
2.
	　when( v － v* != 0 ) {

		z  =  vh , z*=  v*h*;
		W* =  W + n ( z － z* ) ;		 //n  learn rate
		b* =  b + n ( h － h* ) ;   	 //隐含层
		a* =  a + n ( v － v* ) ;　	  //可视层

		}

p(hi=1|v)=sigmoid(bi+∑j Wji vj)       （1-4）
p(vj=1|h)=sigmoid(aj+∑j Wij hj)       （1-5）

v －> h －> v*
v* －> h*

当输入v的时候，通过p(h|v) 可以得到隐藏层h，而得到隐藏层h之后，通过p(v|h) 又能得到可视层，
通过调整参数，我们就是要使得从隐藏层得到的可视层v1与原来的可视层v
如果一样，那么得到的隐藏层就是可视层另外一种表达，因此隐藏层可以作为可视层输入数据的特征，
所以它就是一种Deep Learning方法。

偏导数
log p ,w  = ( z － z* )
log p ,b = ( h － h* )
log p ,a = ( v － v* )
